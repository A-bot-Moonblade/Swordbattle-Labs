daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;
    gzip_proxied any; # Heroku router sends Via header

    server_tokens off;

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
    error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 5 seconds.
    client_body_timeout 5;

    upstream api_server {
        server localhost:3000 fail_timeout=0;
    }

    upstream na_server {
        server localhost:8080 fail_timeout=0;
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name api.swordbattle.io;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://api_server;
        }
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name na.swordbattle.io;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://na_server;
        }
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;

        location / {
            return 200 'Hello World';
            add_header Content-Type text/plain;
        }
    }
}
